//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <350>;
    hold-trigger-key-positions = <>;
};

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        punct_layer {
            bindings = <&sl 1>;
            key-positions = <23 24>;
            layers = <0>;
        };

        nav_layer {
            bindings = <&to 2>;
            key-positions = <29 28>;
        };

        shiftlh {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <2 3>;
        };

        num_layer {
            bindings = <&to 2>;
            key-positions = <28 27>;
        };

        shiftrh {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <6 7>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 0>;
        };

        bluetoothnext {
            bindings = <&bt BT_NXT>;
            key-positions = <22 25>;
        };

        bluetoothprev {
            bindings = <&bt BT_PRV>;
            key-positions = <21 24>;
        };

        backtozero {
            bindings = <&to 0>;
            key-positions = <22 23>;
        };

        bluetoothclr {
            bindings = <&bt BT_CLR>;
            key-positions = <21 25>;
        };

        bluetoothclrall {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <21 23 25>;
        };

        promethium {
            bindings = <&tog 6>;
            key-positions = <26 30>;
        };

        dvorak {
            bindings = <&to 0>;
            key-positions = <26 29 30>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&key_repeat>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };

        frtaandroid: fra {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp A>;
            label = "FRA";
        };

        fre: fre {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(GRAVE) &kp E>;
            label = "FRE";
        };

        frseandroid: freandroid {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp E>;
            label = "FREANDROID";
        };

        fru: fru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(GRAVE) &kp U>;
            label = "FRU";
        };

        frzuandroid: fruandroid {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp U>;
            label = "FRUANDROID";
        };

        frza: frza {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(GRAVE) &kp A>;
            label = "FRZA";
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <27 28 29 30 31 19 9 18 8 7 17 16 6 5 15 37 36 26 35>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <20 21 32 33 34 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };

        ltl: ltl {
            compatible = "zmk,behavior-hold-tap";
            label = "LTL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <27 28 29 30 31 19 9 18 8 7 17 16 6 5 15 37 36 26 35>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        ltr: ltr {
            compatible = "zmk,behavior-hold-tap";
            label = "LTR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <20 21 32 33 34 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };

        copypaste: copypaste {
            compatible = "zmk,behavior-tap-dance";
            label = "COPYPASTE";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&mt LC(V) LC(X)>;
        };

        repeat_sl: repeat_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "REPEAT_SL";
            bindings = <&sl>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        comma_shift_tap: comma_shift_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "COMMA_SHIFT_TAP";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&kp COMMA>;
        };

        comma_shift_hold: comma_shift_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "COMMA_SHIFT_HOLD";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        hold_sl: hold_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_SL";
            bindings = <&to>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        sltol1: sltol1 {
            compatible = "zmk,behavior-tap-dance";
            label = "SLTOL1";
            #binding-cells = <0>;
            bindings = <&sl 1>, <&to 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &kp SQT          &kp COMMA        &kp PERIOD         &kp P                &kp Y                &kp F              &kp G                &kp C              &kp L            &kp MINUS
       &hml LEFT_GUI A  &hml LEFT_ALT O  &hml LEFT_SHIFT E  &hml LEFT_CONTROL U  &hml LEFT_SHIFT I    &hml LEFT_SHIFT D  &hmr LEFT_CONTROL H  &hmr LEFT_SHIFT T  &hmr LEFT_ALT N  &hmr LEFT_GUI S
&none  &kp SEMICOLON    &kp Q            &kp J              &kp K                &kp X                &kp B              &kp M                &kp W              &kp V            &kp Z            &none
                                         &kp ENTER          &kp R                &sl 1                &to 2              &kp SPACE            &kp BACKSPACE
            >;
        };

        punctuation_layer_right {
            label = "punct_right";
            bindings = <
       &none  &none          &kp CARET      &kp DOLLAR        &none            &kp AMPS   &kp AT           &kp HASH           &kp GRAVE  &kp PERCENT
       &none  &kp RA(GRAVE)  &kp RA(E)      &kp RA(NUMBER_6)  &kp RA(COMMA)    &kp UNDER  &kp EXCLAMATION  &kp QUESTION       &kp COLON  &kp BACKSLASH
&none  &none  &kp RA(GRAVE)  &kp RIGHT_ALT  &kp RA(NUMBER_6)  &kp RA(COMMA)    &kp PIPE   &kp ASTRK        &kp DOUBLE_QUOTES  &kp SLASH  &kp TILDE      &none
                             &kp TAB        &none             &to 0            &to 2      &kp SPACE        &kp ESCAPE
            >;
        };

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &kp TAB     &kp MINUS      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS            &kp DELETE  &kp N7  &kp N8         &kp N9  &kp BACKSPACE
       &kp ESCAPE  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN    &kp COMMA   &kp N4  &kp N5         &kp N6  &kp ENTER
&none  &kp SLASH   &kp EQUAL      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ASTRK           &kp PERIOD  &kp N1  &kp N2         &kp N3  &to 3          &none
                                  &none                 &kp SPACE              &to 0               &to 1       &kp N0  &kp BACKSPACE
            >;
        };

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAV";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ˆ     ┃     &     ┃     Ü     ┃     '     ┃     "     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     Ä     ┃           ┃    SZ     ┃           ┃           ┃   ┃   MUTE    ┃   YEN     ┃   EURO    ┃  POUND    ┃     Ö     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃  EMAIL1   ┃  EMAIL2   ┃           ┃           ┃           ┃   ┃   VOL-    ┃   VOL+    ┃   LAST    ┃   NEXT    ┃     \     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    GIF    ┃    ADJ    ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &kp LC(TAB)          &kp ESCAPE          &kp F2                &kp F11                 &kp F4       &kp PRINTSCREEN  &kp LC(LS(TAB))  &kp LC(TAB)  &kp ENTER      &kp BACKSPACE
       &mt LEFT_GUI ESCAPE  &mt LEFT_ALT LC(N)  &mt LEFT_SHIFT LC(T)  &mt LEFT_CONTROL LC(P)  &kp LC(Y)    &sk HOME         &kp LEFT         &kp RIGHT    &kp END        &kp ENTER
&none  &kp LC(A)            &kp LC(C)           &kp LC(W)             &kp LC(V)               &kp LC(X)    &kp PAGE_UP      &kp UP_ARROW     &kp DOWN     &kp PAGE_DOWN  &to 1          &none
                                                &none                 &kp LEFT_SHIFT          &to 0        &to 2            &kp SPACE        &none
            >;
        };

        tvp1_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "TVP 1";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃ NEXT FILE ┃ MARK IN   ┃ ROTATE    ┃ MARK OUT  ┃ SHOW SNAP ┃   ┃           ┃           ┃           ┃           ┃           ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ TVP II    ┃ LEFT      ┃ PAN       ┃ RIGHT     ┃ PLAY/FLIP ┃   ┃           ┃           ┃           ┃           ┃           ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃ FULLSCR   ┃ SHIFT     ┃ COPY      ┃ DELETE    ┃ PASTE     ┃ IMG MARK  ┃   ┃           ┃           ┃           ┃           ┃           ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃ UNDO/SAVE ┃  SEL/MOV  ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_MAXIMUM    &none      &kp HOME       &kp UP_ARROW              &kp END      &none
       &bt BT_CLR_ALL         &kp K_MUTE                &kp C_VOL_DN          &kp C_VOL_UP          &none                       &none      &kp LEFT       &kp DOWN                  &kp RIGHT    &kp DELETE
&none  &bt BT_CLR             &out OUT_USB              &bt BT_PRV            &bt BT_NXT            &out OUT_BLE                &none      &kp PAGE_DOWN  &kp ESCAPE                &kp PAGE_UP  &none       &none
                                                        &mt LEFT_SHIFT TAB    &to 0                 &none                       &kp SPACE  &kp ENTER      &mt LEFT_SHIFT BACKSPACE
            >;
        };

        promethium {
            label = "promethium";
            bindings = <
       &kp F  &kp P  &kp D  &kp L  &kp X    &kp SEMI                            &kp U      &kp O    &kp Y  &kp B
       &kp S  &kp N  &kp T  &kp H  &kp K    &comma_shift_hold COMMA LEFT_SHIFT  &kp A      &kp E    &kp I  &kp C
&none  &kp V  &kp W  &kp G  &kp M  &kp J    &kp MINUS                           &kp DOT    &kp SQT  &kp Q  &kp Z  &none
                     &to 0  &kp R  &kp R    &kp SPACE                           &kp SPACE  &to 0
            >;
        };

        promethium_24 {
            label = "promethium-24";
            bindings = <
       &none  &kp P            &kp D              &kp L                &none    &none      &kp U                &kp O              &kp Y            &none
       &kp S  &hml LEFT_ALT N  &hml LEFT_SHIFT T  &hml LEFT_CONTROL H  &none    &none      &hmr LEFT_CONTROL A  &hmr LEFT_SHIFT E  &hmr LEFT_ALT I  &kp C
&none  &kp F  &kp W            &kp G              &kp M                &none    &none      &sl 7                &sl 8              &to 9            &kp B  &none
                               &none              &none                &kp R    &kp SPACE  &none                &none
            >;
        };

        promethium_24_alpha2 {
            bindings = <
        &trans      &none  &kp QUESTION  &kp EXCL  &trans     &trans    &kp LS(AT)     &kp LS(POUND)  &kp GRAVE    &trans
        &kp ESCAPE  &kp Z  &kp V         &kp X     &trans     &trans    &kp LCTRL      &kp LSHFT      &kp LALT     &kp UNDER
&trans  &none       &kp Q  &kp J         &kp K     &trans     &trans    &kp LS(CARET)  &kp LS(DLLR)   &kp PERCENT  &kp PIPE   &trans
                           &trans        &trans    &kp ESC    &kp CAPS  &trans         &trans
            >;
        };

        promethium_24_sym {
            bindings = <
        &trans         &kp LS(DQT)  &kp MINUS  &kp LS(STAR)   &none     &trans  &kp LS(LC(TAB))  &kp LC(TAB)     &kp PAGE_UP    &trans
        &kp BSLH       &kp SQT      &kp DOT    &kp COMMA      &trans    &trans  &kp LEFT         &kp RIGHT       &kp HOME       &kp END
&trans  &kp LS(TILDE)  &kp FSLH     &kp SEMI   &kp LS(COLON)  &none     &trans  &kp UP_ARROW     &kp DOWN_ARROW  &kp PAGE_DOWN  &to 8    &trans
                                    &trans     &trans         &to 6     &to 9   &trans           &trans
            >;
        };

        promethium_24_num {
            bindings = <
        &trans   &kp LESS_THAN     &kp LBKT      &kp RBKT      &trans    &trans  &kp N7  &kp N8  &kp N9  &trans
        &kp TAB  &kp GREATER_THAN  &kp LS(LPAR)  &kp LS(RPAR)  &none     &none   &kp N4  &kp N5  &kp N6  &kp ENTER
&trans  &to 8    &sl 10            &kp LS(LBRC)  &kp LS(RBRC)  &none     &none   &kp N1  &kp N2  &kp N3  &kp BACKSPACE  &trans
                                   &trans        &trans        &to 6     &kp N0  &trans  &trans
            >;
        };

        promethium_24_num_syms {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans     &kp PERCENT  &kp HASH   &kp EQUAL  &trans
        &trans  &trans  &trans  &trans  &trans    &trans     &kp COMMA    &kp DOT    &kp COLON  &kp DOUBLE_QUOTES
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp ASTRK    &kp MINUS  &kp SLASH  &kp PLUS           &trans
                        &trans  &trans  &trans    &kp SPACE  &trans       &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
